<UserControl x:Class="Thingie.WPF.Controls.ObjectExplorer.ObjectExplorerUC"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ador="clr-namespace:Thingie.WPF.Adorners"
        xmlns:conv="clr-namespace:Thingie.WPF.Converters"
        xmlns:oe="clr-namespace:Thingie.WPF.Controls.ObjectExplorer"
        xmlns:beh="clr-namespace:Thingie.WPF.Behaviors"
        mc:Ignorable="d" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto">
    <Grid>
        <Grid.Resources>
            <oe:SortConverter x:Key="sortConverter"></oe:SortConverter>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <AdornerDecorator>
            <TextBox FontSize="9pt" x:Name="txtFilter" TextChanged="txtFilter_TextChanged" BorderThickness="1" Margin="5" Height="25" VerticalContentAlignment="Center">
                <ador:WatermarkAdorner.Watermark>
                    <TextBlock>Filter</TextBlock>
                </ador:WatermarkAdorner.Watermark>
            </TextBox>
        </AdornerDecorator>
        <Button Margin="5" Padding="5,0" Opacity="0.7" HorizontalAlignment="Right" VerticalContentAlignment="Center" Background="Transparent" BorderBrush="{x:Null}" Click="btnClearFilter_Click">
            <Button.Content>
                <Path x:Name="ButtonPath"
                    Margin="3" Stroke="DarkGray" StrokeThickness="1.5" StrokeStartLineCap="Square" StrokeEndLineCap="Square" Stretch="Uniform"
                    VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Path.Data>
                        <PathGeometry>
                            <PathGeometry.Figures>
                                <PathFigure StartPoint="0,0">
                                    <LineSegment Point="7,7"/>
                                </PathFigure>
                                <PathFigure StartPoint="0,7">
                                    <LineSegment Point="7,0"/>
                                </PathFigure>
                            </PathGeometry.Figures>
                        </PathGeometry>
                    </Path.Data>
                </Path>
            </Button.Content>
        </Button>
        <AdornerDecorator Grid.Row="1" Margin="5,0,5,5">
            <TreeView ItemsSource="{Binding Nodes, Converter={StaticResource sortConverter}}" BorderThickness="0"
                x:Name="tree" VirtualizingStackPanel.IsVirtualizing="True" Background="Transparent" Focusable="False"
                PreviewMouseMove="tree_PreviewMouseMove" PreviewMouseLeftButtonDown="tree_PreviewMouseLeftButtonDown"
                PreviewKeyDown="TreeView_KeyDown"
                PreviewMouseRightButtonDown="tree_PreviewMouseRightButtonDown">
                <TreeView.ItemContainerStyle>
                    <Style TargetType="TreeViewItem">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        <EventSetter Event="ContextMenuOpening" Handler="contextMenu_Opening" />
                        <EventSetter Event="ContextMenuClosing" Handler="contextMenu_Closing" />
                        <EventSetter Event="Unselected" Handler="node_Unselected" />
                        <EventSetter Event="PreviewMouseDown" Handler="node_PreviewMouseLeftButtonDown"/>
                        <EventSetter Event="KeyDown" Handler="node_PreviewKeyDown" />
                        <Setter Property="ContextMenu">
                            <Setter.Value>
                                <ContextMenu ItemsSource="{Binding ContextCommands}" Visibility="{Binding ContextCommands.Count, Converter={conv:MapConverter 0:Collapsed;_default:Visible}}">
                                    <ContextMenu.Resources>
                                        <oe:IsSeparatorConverter x:Key="isSeparatorConverter"></oe:IsSeparatorConverter>
                                        <ControlTemplate x:Key="MenuSeparatorTemplate">
                                            <Separator>
                                                <Separator.Style>
                                                    <Style TargetType="Separator">
                                                        <Setter Property="Opacity" Value="0.25" />
                                                    </Style>
                                                </Separator.Style>
                                            </Separator>
                                        </ControlTemplate>
                                        <Image  x:Key="miIcon"
                                                x:Shared="false"
                                                Source="{Binding ImageUri, NotifyOnTargetUpdated=True}"
                                                beh:GrayoutImageBehavior.GrayOutOnDisabled="True"
                                                Height="16" Width="16" RenderOptions.BitmapScalingMode="HighQuality"/>
                                    </ContextMenu.Resources>
                                    <ContextMenu.ItemContainerStyle>
                                        <Style TargetType="MenuItem">
                                            <Setter Property="ItemsSource" Value="{Binding SubmenuCommands}" />
                                            <Setter Property="Padding" Value="2"/>
                                            <Setter Property="Command" Value="{Binding}" />
                                            <Setter Property="CommandParameter" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType=TreeViewItem}}" />
                                            <Setter Property="Header" Value="{Binding Text}" />
                                            <Setter Property="Icon" Value="{StaticResource miIcon}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Converter={StaticResource isSeparatorConverter}}" Value="True">
                                                    <Setter Property="Template" Value="{StaticResource MenuSeparatorTemplate}" />
                                                    <Setter Property="Focusable" Value="False" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContextMenu.ItemContainerStyle>
                                </ContextMenu>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Nodes, Converter={StaticResource sortConverter}}">
                        <StackPanel Orientation="Horizontal" Margin="2" AllowDrop="True" Drop="StackPanel_Drop" DragOver="StackPanel_DragOver">
                            <StackPanel.ToolTip>
                                <TextBlock MaxWidth="500" Text="{Binding ToolTip}" TextWrapping="Wrap" Visibility="{Binding ToolTip, Converter={conv:MapConverter '_null:Collapsed;:Collapsed;_default:Visible'}}"/>
                            </StackPanel.ToolTip>
                            <CheckBox IsTabStop="False" IsChecked="{Binding IsChecked}" IsThreeState="{Binding IsThreeState}" Visibility="{Binding CheckboxEnabled, Converter={conv:MapConverter 'true:Visible;false:Collapsed'}}"></CheckBox>
                            <Image Source="{Binding ImageURI}" Width="16" Height="16" Margin="0,0,2,0" VerticalAlignment="Center" RenderOptions.BitmapScalingMode="HighQuality"
                                   Visibility="{Binding ImageURI, Converter={conv:MapConverter _null:Collapsed;_default:Visible}}"/>
                            <TextBlock Text="{Binding DisplayText}" VerticalAlignment="Center"
									   Visibility="{Binding IsEditing, Converter={conv:MapConverter 'false:Visible;true:Collapsed;'}}"/>
                            <TextBlock Text="{Binding Badge}" Opacity="0.5" VerticalAlignment="Center" Margin="2,0,0,0"
									   Visibility="{Binding IsEditing, Converter={conv:MapConverter 'false:Visible;true:Collapsed;'}}"/>
                            <TextBox Text="{Binding Name, ValidatesOnExceptions=True}" VerticalAlignment="Center" 
                                     Visibility="{Binding IsEditing, Converter={conv:MapConverter 'true:Visible;false:Collapsed;'}}"
                                     IsVisibleChanged="TextBox_IsVisibleChanged" BorderThickness="0" PreviewKeyDown="TextBox_PreviewKeyDown" LostFocus="TextBox_LostFocus"/>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
        </AdornerDecorator>
    </Grid>
</UserControl>
